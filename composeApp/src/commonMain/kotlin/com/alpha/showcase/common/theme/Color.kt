package com.alpha.showcase.common.theme

import androidx.compose.ui.graphics.Color

//generated by https://m3.material.io/theme-builder#/custom
//Color palette was taken here: https://colorhunt.co/palettes/popular

val Purple80 = Color(0xFFD0BCFF)
val PurpleGrey80 = Color(0xFFCCC2DC)
val Pink80 = Color(0xFFEFB8C8)

val Purple40 = Color(0xFF6650a4)
val PurpleGrey40 = Color(0xFF625b71)
val Pink40 = Color(0xFF7D5260)

val Blue10 = Color(0xFF000F5E)
val Blue20 = Color(0xFF001E92)
val Blue30 = Color(0xFF002ECC)
val Blue40 = Color(0xFF1546F6)
val Blue80 = Color(0xFFB8C3FF)
val Blue90 = Color(0xFFDDE1FF)

val DarkBlue10 = Color(0xFF00036B)
val DarkBlue20 = Color(0xFF000BA6)
val DarkBlue30 = Color(0xFF1026D3)
val DarkBlue40 = Color(0xFF3648EA)
val DarkBlue80 = Color(0xFFBBC2FF)
val DarkBlue90 = Color(0xFFDEE0FF)

val Yellow10 = Color(0xFF261900)
val Yellow20 = Color(0xFF402D00)
val Yellow30 = Color(0xFF5C4200)
val Yellow40 = Color(0xFF7A5900)
val Yellow80 = Color(0xFFFABD1B)
val Yellow90 = Color(0xFFFFDE9C)

val Red10 = Color(0xFF410001)
val Red20 = Color(0xFF680003)
val Red30 = Color(0xFF930006)
val Red40 = Color(0xFFBA1B1B)
val Red80 = Color(0xFFFFB4A9)
val Red90 = Color(0xFFFFDAD4)

val Grey10 = Color(0xFF191C1D)
val Grey20 = Color(0xFF2D3132)
val Grey80 = Color(0xFFC4C7C7)
val Grey90 = Color(0xFFE0E3E3)
val Grey95 = Color(0xFFEFF1F1)
val Grey99 = Color(0xFFFBFDFD)

val BlueGrey30 = Color(0xFF45464F)
val BlueGrey50 = Color(0xFF767680)
val BlueGrey60 = Color(0xFF90909A)
val BlueGrey80 = Color(0xFFC6C5D0)
val BlueGrey90 = Color(0xFFE2E1EC)

val DELETE_COLOR = Color.Red.copy(0.4f)


val primaryLight = Color(0xFF334A65)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF576E8B)
val onPrimaryContainerLight = Color(0xFFFFFFFF)
val secondaryLight = Color(0xFF575F6B)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFDCE4F3)
val onSecondaryContainerLight = Color(0xFF414955)
val tertiaryLight = Color(0xFF59405D)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF7F6383)
val onTertiaryContainerLight = Color(0xFFFFFFFF)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFAF9FB)
val onBackgroundLight = Color(0xFF1B1C1E)
val surfaceLight = Color(0xFFFAF9FB)
val onSurfaceLight = Color(0xFF1B1C1E)
val surfaceVariantLight = Color(0xFFE0E2EA)
val onSurfaceVariantLight = Color(0xFF43474D)
val outlineLight = Color(0xFF74777E)
val outlineVariantLight = Color(0xFFC4C6CE)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF303032)
val inverseOnSurfaceLight = Color(0xFFF2F0F3)
val inversePrimaryLight = Color(0xFFB1C8E9)
val surfaceDimLight = Color(0xFFDBD9DC)
val surfaceBrightLight = Color(0xFFFAF9FB)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF5F3F5)
val surfaceContainerLight = Color(0xFFEFEDF0)
val surfaceContainerHighLight = Color(0xFFE9E8EA)
val surfaceContainerHighestLight = Color(0xFFE3E2E4)

val primaryLightMediumContrast = Color(0xFF2D445F)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF576E8B)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF3B434F)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF6D7582)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF533A58)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF7F6383)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFAF9FB)
val onBackgroundLightMediumContrast = Color(0xFF1B1C1E)
val surfaceLightMediumContrast = Color(0xFFFAF9FB)
val onSurfaceLightMediumContrast = Color(0xFF1B1C1E)
val surfaceVariantLightMediumContrast = Color(0xFFE0E2EA)
val onSurfaceVariantLightMediumContrast = Color(0xFF3F4349)
val outlineLightMediumContrast = Color(0xFF5C5F66)
val outlineVariantLightMediumContrast = Color(0xFF777B81)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF303032)
val inverseOnSurfaceLightMediumContrast = Color(0xFFF2F0F3)
val inversePrimaryLightMediumContrast = Color(0xFFB1C8E9)
val surfaceDimLightMediumContrast = Color(0xFFDBD9DC)
val surfaceBrightLightMediumContrast = Color(0xFFFAF9FB)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF5F3F5)
val surfaceContainerLightMediumContrast = Color(0xFFEFEDF0)
val surfaceContainerHighLightMediumContrast = Color(0xFFE9E8EA)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE3E2E4)

val primaryLightHighContrast = Color(0xFF08233D)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF2D445F)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF1A232D)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF3B434F)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF301A35)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF533A58)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFAF9FB)
val onBackgroundLightHighContrast = Color(0xFF1B1C1E)
val surfaceLightHighContrast = Color(0xFFFAF9FB)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFE0E2EA)
val onSurfaceVariantLightHighContrast = Color(0xFF20242A)
val outlineLightHighContrast = Color(0xFF3F4349)
val outlineVariantLightHighContrast = Color(0xFF3F4349)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF303032)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFE2EDFF)
val surfaceDimLightHighContrast = Color(0xFFDBD9DC)
val surfaceBrightLightHighContrast = Color(0xFFFAF9FB)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF5F3F5)
val surfaceContainerLightHighContrast = Color(0xFFEFEDF0)
val surfaceContainerHighLightHighContrast = Color(0xFFE9E8EA)
val surfaceContainerHighestLightHighContrast = Color(0xFFE3E2E4)

val primaryDark = Color(0xFFB1C8E9)
val onPrimaryDark = Color(0xFF19324C)
val primaryContainerDark = Color(0xFF4D6481)
val onPrimaryContainerDark = Color(0xFFFFFFFF)
val secondaryDark = Color(0xFFBFC7D5)
val onSecondaryDark = Color(0xFF29313C)
val secondaryContainerDark = Color(0xFF353D49)
val onSecondaryContainerDark = Color(0xFFC8D1DF)
val tertiaryDark = Color(0xFFDDBCE0)
val onTertiaryDark = Color(0xFF3F2844)
val tertiaryContainerDark = Color(0xFF755A79)
val onTertiaryContainerDark = Color(0xFFFFFFFF)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF121315)
val onBackgroundDark = Color(0xFFE3E2E4)
val surfaceDark = Color(0xFF121315)
val onSurfaceDark = Color(0xFFE3E2E4)
val surfaceVariantDark = Color(0xFF43474D)
val onSurfaceVariantDark = Color(0xFFC4C6CE)
val outlineDark = Color(0xFF8D9198)
val outlineVariantDark = Color(0xFF43474D)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE3E2E4)
val inverseOnSurfaceDark = Color(0xFF303032)
val inversePrimaryDark = Color(0xFF49607C)
val surfaceDimDark = Color(0xFF121315)
val surfaceBrightDark = Color(0xFF38393B)
val surfaceContainerLowestDark = Color(0xFF0D0E10)
val surfaceContainerLowDark = Color(0xFF1B1C1E)
val surfaceContainerDark = Color(0xFF1F2022)
val surfaceContainerHighDark = Color(0xFF292A2C)
val surfaceContainerHighestDark = Color(0xFF343537)

val primaryDarkMediumContrast = Color(0xFFB5CDED)
val onPrimaryDarkMediumContrast = Color(0xFF00172E)
val primaryContainerDarkMediumContrast = Color(0xFF7B93B1)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFC3CBDA)
val onSecondaryDarkMediumContrast = Color(0xFF0E1721)
val secondaryContainerDarkMediumContrast = Color(0xFF89919F)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFE2C0E4)
val onTertiaryDarkMediumContrast = Color(0xFF230D28)
val tertiaryContainerDarkMediumContrast = Color(0xFFA587A9)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF121315)
val onBackgroundDarkMediumContrast = Color(0xFFE3E2E4)
val surfaceDarkMediumContrast = Color(0xFF121315)
val onSurfaceDarkMediumContrast = Color(0xFFFCFAFD)
val surfaceVariantDarkMediumContrast = Color(0xFF43474D)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC8CBD2)
val outlineDarkMediumContrast = Color(0xFFA0A3AA)
val outlineVariantDarkMediumContrast = Color(0xFF80838A)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE3E2E4)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF292A2C)
val inversePrimaryDarkMediumContrast = Color(0xFF324965)
val surfaceDimDarkMediumContrast = Color(0xFF121315)
val surfaceBrightDarkMediumContrast = Color(0xFF38393B)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0D0E10)
val surfaceContainerLowDarkMediumContrast = Color(0xFF1B1C1E)
val surfaceContainerDarkMediumContrast = Color(0xFF1F2022)
val surfaceContainerHighDarkMediumContrast = Color(0xFF292A2C)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF343537)

val primaryDarkHighContrast = Color(0xFFFAFAFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFB5CDED)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFAFAFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFC3CBDA)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9FA)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFE2C0E4)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF121315)
val onBackgroundDarkHighContrast = Color(0xFFE3E2E4)
val surfaceDarkHighContrast = Color(0xFF121315)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF43474D)
val onSurfaceVariantDarkHighContrast = Color(0xFFFAFAFF)
val outlineDarkHighContrast = Color(0xFFC8CBD2)
val outlineVariantDarkHighContrast = Color(0xFFC8CBD2)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE3E2E4)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF122B45)
val surfaceDimDarkHighContrast = Color(0xFF121315)
val surfaceBrightDarkHighContrast = Color(0xFF38393B)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0D0E10)
val surfaceContainerLowDarkHighContrast = Color(0xFF1B1C1E)
val surfaceContainerDarkHighContrast = Color(0xFF1F2022)
val surfaceContainerHighDarkHighContrast = Color(0xFF292A2C)
val surfaceContainerHighestDarkHighContrast = Color(0xFF343537)


internal val seed = Color(0xFF2C3639)
fun parseColor(string: String): Color {
	if (string.isEmpty() || string[0] != '#' || string.length > 7) {
		return Color.Unspecified
	}
	val hex = string.substring(1, string.length - 1)
	return if (hex.length > 6) {
		Color(hex.toLong(16))
	} else {
		Color(hex.toLong(16) or 0xFF000000)
	}
}